syntax = "proto3";

package user;

enum Role {
  USER = 0;
  MODERATOR = 1;
  ADMIN = 2;
}

message User {
  int32 id = 1;
  string email = 2;
  Role role = 3;
  string display_name = 4;
}

message Avatar {
  string url = 1;
}

message Profile {
  string bio = 1;
  string url = 2;
  string location = 3;
}

message CreatedUser {
  int32 id = 1;
  string confirm_code = 2;
}

message CreateUserRequest {
  string display_name = 1;
  string email = 2;
  string password = 3;
}

message CreateUserResponse {
  bool is_user_created = 1;
  bool is_user_already_exists = 2;
  CreatedUser created_user = 3;
}

message FindOneRequest {
  int32 id = 1;
}

message FindOneResponse {
  bool is_user_exists = 1;
  User user = 2;
}

message FindByEmailRequest {
  string email = 1;
}

message FindByEmailResponse {
  bool is_user_exists = 1;
  User user = 2;
}

message FindByEmailAndPasswordRequest {
  string email = 1;
  string password = 2;
}

message FindByEmailAndPasswordResponse {
  bool is_user_exists = 1;
  bool is_valid_password = 2;
  User user = 3;
}

message FindAvatarRequest {
  int32 user_id = 1;
}

message FindAvatarResponse {
  bool is_avatar_exists = 1;
  Avatar avatar = 2;
}

message FindProfileRequest {
  int32 user_id = 1;
}

message FindProfileResponse {
  bool is_profile_exists = 1;
  Profile profile = 2;
}

service UserService {
  rpc createUser(CreateUserRequest) returns (CreateUserResponse);

  rpc findOne(FindOneRequest) returns (FindOneResponse);
  rpc findByEmail(FindByEmailRequest) returns (FindByEmailResponse);
  rpc findByEmailAndPassword(FindByEmailAndPasswordRequest) returns (FindByEmailAndPasswordResponse);

  rpc findAvatar(FindAvatarRequest) returns (FindAvatarResponse);
  rpc findProfile(FindProfileRequest) returns (FindProfileResponse);
}